
name: Test

on:
  push:
    branches: [ "master" ]
    paths-ignore: [ "badges" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NuGetAPIKey }}
          nuget-version: '5.x'

      - name: Restore NuGet packages
        run: nuget restore PFD_Editor.sln

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Debug build
        run: msbuild PFD_Editor.sln /p:Configuration=Debug /p:Platform="Any CPU"

      - name: Execute AltCover
        run: packages\altcover.8.6.68\tools\net472\altcover.exe /i="UnitTestProject/bin/Debug" /o="__Instrumented/UnitTestProject/bin/Debug" -l

      - name: UnitTest with Coverage
        run: '& "$(vswhere -property installationPath)\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" __Instrumented\UnitTestProject\bin\Debug\UnitTestProject.dll'

      - name: ReportGenerator
        run: packages\ReportGenerator.5.1.26\tools\net47\ReportGenerator.exe -reports:coverage.xml -targetdir:.\CoverageReport -reporttypes:'Html;MarkdownSummaryGithub;JsonSummary;Badges'

      - run: ls CoverageReport

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: .\CoverageReport

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v3
        with:
          name: coverage_xml
          path: ./coverage.xml

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: CoverageReport/SummaryGithub.md

  report:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download coverage report
        if: github.event_name == 'push'
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Add badges
        if: github.event_name == 'push'
        run: |
          ls
          mkdir badges
          cp CoverageReport/badge_combined.svg badges/

      - name: Create Pull Request
        if: github.event_name == 'push'
        id: create-pull-request
        run: |
          PULL_REQUEST_URI=$(gh pr create -B stage -t auto merge -l 'auto merge' -b "")
          echo "::set-output name=PULL_REQUEST_URI::$PULL_REQUEST_URI"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Merge Pull Request
        if: github.event_name == 'push'
        run: |
          gh pr merge ${{steps.create-pull-request.outputs.PULL_REQUEST_URI}} --merge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
